#include "CommomFunction.h"
#include "Bird.h"
#include "Obstacle.h"
#include <ctime>
#include <iostream>
bool Init()
{
	if (SDL_Init(SDL_INIT_EVERYTHING) == -1) return false;
	g_screen = SDL_SetVideoMode(g_SCREEN_WIDTH, g_SCREEN_HEIGHT, BPP, SDL_SWSURFACE);
	return true;
}

int Game_Over()
{
	SDL_Surface* gameov = NULL;
	gameov = CommomFunction::LoadImage("game_over.png");
	if (gameov == NULL) return 1;
	int g_w = g_SCREEN_WIDTH;
	int g_h = g_SCREEN_HEIGHT;
	while (1)
	{	
		g_w = (g_w / 2) - 250;
		g_h = (g_h / 2) - 250;
		CommomFunction::ApplySurface(gameov, g_screen, g_w, g_h);
	}
	return 0;
}

void Begin(SDL_Event events)
{
	while (1)
	{
		SDL_Surface* begin_bk = NULL;
		begin_bk = CommomFunction::LoadImage("background_begin.png");
		if (begin_bk == NULL) break;
		CommomFunction::ApplySurface(begin_bk, g_screen, 0, 0);
		SDL_Surface* text1 = NULL;
		text1 = CommomFunction::LoadImage("pressanykey.png");
		if (text1 == NULL) break;
		int denta_y = 1;
		if ((g_SCREEN_HEIGHT / 2) - 200 + denta_y > (g_SCREEN_HEIGHT / 2) - 200 + 20)
		{
			denta_y = -1;
		}
		else if ((g_SCREEN_HEIGHT / 2) - 200 + denta_y < (g_SCREEN_HEIGHT / 2) - 200 - 20)
		{
			denta_y = 1;
		}
		CommomFunction::ApplySurface(text1, g_screen, (g_SCREEN_WIDTH / 2) - 200, (g_SCREEN_HEIGHT / 2) - 200 + denta_y);

		if (g_event.type == SDL_KEYDOWN)
		{
			if (g_event.type == SDL_KEYUP) break;
		}
	}
}

int main(int arc, char* agrv[])
{
	int bk_x = 0;
	bool is_quit = false;
	Init();
	if (Init() == false) return 0;
	
	g_background = CommomFunction::LoadImage("background.png");
	
	Bird bird1;
	bird1.Set_Rect((g_SCREEN_WIDTH / 3) - 50, (g_SCREEN_HEIGHT / 2) - 50);
	bird1.Set_Surface("bird.png");
	SDL_Surface* Obj = bird1.Get_Surface();
	
	Obstacle wall1;
	Obstacle wall2;
	wall1.obstacle_img = CommomFunction::LoadImage("Obstacle.png");
	wall2.obstacle_img = CommomFunction::LoadImage("Obstacle2.png");
	
	srand(time(NULL));
	int x1 = rand()% 450 + 50;
	int x2 = rand() % 450 + 50;
	int x3 = rand() % 450 + 50;
	int x4 = rand() % 450 + 50;
	int x5 = rand() % 450 + 50;
	int x6 = rand() % 450 + 50;

	int n1 = g_SCREEN_WIDTH+200;
	int n2 = g_SCREEN_WIDTH + 200 + 200;
	int n3 = g_SCREEN_WIDTH + 200 + 200*2;
	int n4 = g_SCREEN_WIDTH + 200 + 200*3;
	int n5 = g_SCREEN_WIDTH + 200 + 200*4;
	int n6 = g_SCREEN_WIDTH + 200 + 200*5;

	while (!is_quit)
	{
		while (SDL_PollEvent(&g_event))
		{
			if (g_event.type == SDL_QUIT)
			{
				is_quit = true;
				break;
			}
			bird1.HandleActionInput(g_event);
		}
		
		bool check_rect = true;
		CommomFunction::ApplySurface(g_background, g_screen, bk_x, 0);
		CommomFunction::ApplySurface(g_background, g_screen, bk_x + g_SCREEN_WIDTH, 0);
		if (bk_x <= -g_SCREEN_WIDTH) bk_x = 0;
		CommomFunction::ApplySurface(Obj, g_screen, bird1.rect_.x, bird1.rect_.y += 2);
#ifndef WALL 
#define WALL 

		bk_x -= 2;
		n1 -= 1;
		n2 -= 1;
		n3 -= 1;
		n4 -= 1;
		n5 -= 1;
		n6 -= 1;
		if (n1 <= -500)
		{
			n1 = g_SCREEN_WIDTH;
			x1 = rand() % 50 + 200;
		}
		CommomFunction::ApplySurface(wall1.obstacle_img, g_screen, n1, x1);			// x - (y + 344_Height) = 44
		CommomFunction::ApplySurface(wall2.obstacle_img, g_screen, n1, x1-500);
		if (CommomFunction::check_rect(bird1.rect_, wall1.rect_) == false) printf("Die");
		if (n2 <= -500)
		{
			n2 = g_SCREEN_WIDTH;
			x2 = rand() % 50 + 200;
		}
		CommomFunction::ApplySurface(wall1.obstacle_img, g_screen, n2, x2);			
		CommomFunction::ApplySurface(wall2.obstacle_img, g_screen, n2, x2 - 500);
		if (CommomFunction::check_rect(bird1.rect_, wall1.rect_) == false) printf("Die");
		if (n3 <= -500)
		{
			n3 = g_SCREEN_WIDTH;
			x3 = rand() % 50 + 200;
		}
		CommomFunction::ApplySurface(wall1.obstacle_img, g_screen, n3, x3);
		CommomFunction::ApplySurface(wall2.obstacle_img, g_screen, n3, x3 - 500);
		if (CommomFunction::check_rect(bird1.rect_, wall1.rect_) == false) printf("Die");
		if (n4 <= -500)
		{
			n4 = g_SCREEN_WIDTH;
			x4 = rand() % 50 + 200;
		}
		CommomFunction::ApplySurface(wall1.obstacle_img, g_screen, n4, x4);
		CommomFunction::ApplySurface(wall2.obstacle_img, g_screen, n4, x4 - 500);
		if (CommomFunction::check_rect(bird1.rect_, wall1.rect_) == false) printf("Die");
		if (n5 <= -500)
		{
			n5 = g_SCREEN_WIDTH;
			x5 = rand() % 50 + 200;
		}
		CommomFunction::ApplySurface(wall1.obstacle_img, g_screen, n5, x5);
		CommomFunction::ApplySurface(wall2.obstacle_img, g_screen, n5, x5 - 500);
		if (CommomFunction::check_rect(bird1.rect_, wall1.rect_) == false) printf("Die");
		if (n6 <= -500)
		{
			n6 = g_SCREEN_WIDTH;
			x6 = rand() % 50 + 200;
		}
		CommomFunction::ApplySurface(wall1.obstacle_img, g_screen, n6, x6);
		CommomFunction::ApplySurface(wall2.obstacle_img, g_screen, n6, x6 - 500);
#endif // !WALL
		if (bird1.rect_.y >= 590 - HEIGHT_BIRD)
		{
			/*bool is = true;*/
			/*bird1.HandleDead();*/
			Game_Over();
		}
		bird1.HandleMove();
		
		if (SDL_Flip(g_screen) == -1) return 0;
	}

	CommomFunction::FreeSurface();
	SDL_Quit();

	return 0;
}

// g_SCREEN_WIDTH/2 + 50 >= wall1.rect_.x >= (g_SCREEN_WIDTH / 2) - 50
// bird1.rect_y + HEIGHT_BIRD <
// 330 - 370